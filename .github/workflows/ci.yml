name: CI

on:
  push:
    branches:
      - prod
      - stag
      - dev
  pull_request:
    branches:
      - prod
      - stag
      - dev
  workflow_dispatch:

defaults:
  run:
    shell: bash

jobs:
  ci:
    name: ci on ${{ matrix.runner }} using Flutter ${{ matrix.ref }}
    runs-on: ${{ matrix.runner }}
    strategy:
      matrix:
        runner: [ ubuntu-latest ]
        ref: [ stable, beta ]

    steps:
      - uses: actions/checkout@v3
      - uses: actions/checkout@v3
        with:
          repository: 'hrishikesh-kadam/space_data_explorer_secrets'
          path: 'secrets'
          token: ${{ secrets.SECRETS_REPO_TOKEN }}
      - run: git submodule update --init --recursive

      - uses: hrishikesh-kadam/setup-flutter@v1
        with:
          ref: ${{ matrix.ref }}

      - uses: hrishikesh-kadam/setup-lcov@v1

      - uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '11'

      - run: ./tool/prerequisite.sh

      # https://github.com/actions/cache/blob/main/examples.md#java---gradle
      - name: Cache Gradle
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: gradle-${{ matrix.runner }}-flutter-${{ matrix.ref }}-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}

      - run: ./tool/ci.sh

      - uses: codecov/codecov-action@v3
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: coverage/lcov.info
          name: ${{ matrix.runner }}-${{ matrix.ref }}

      - run: ./tool/web/deploy.sh
        env:
          FIREBASE_SERVICE_ACCOUNT_PROD: ${{ secrets.FIREBASE_SERVICE_ACCOUNT_PROD }}
          FIREBASE_SERVICE_ACCOUNT_STAG: ${{ secrets.FIREBASE_SERVICE_ACCOUNT_STAG }}
          FIREBASE_SERVICE_ACCOUNT_DEV: ${{ secrets.FIREBASE_SERVICE_ACCOUNT_DEV }}

      - uses: FirebaseExtended/action-hosting-deploy@v0
        if: matrix.ref == 'stable'
        with:
          repoToken: ${{ secrets.GITHUB_TOKEN }}
          firebaseServiceAccount: ${{ env.FIREBASE_SERVICE_ACCOUNT }}
          projectId: ${{ env.FIREBASE_PROJECT_ID }}
          channelId: ${{ env.FIREBASE_CHANNEL_ID }}
          expires: 30d

      - run: ./tool/android/publish.sh
